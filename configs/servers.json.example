{
  "example-ssh": {
    "title": "example",
    "ssh_host": "example.example.com",
    "ssh_username": "admin",
    "ssh_password": "admin",
    "ignore_groups": ["my_admin_group"],
    "acl_ldap_attribute": "samAccountName",
    "acl_command": ["SSH#ls -led {folder_name} && echo \"everyone:Domain Users\""],
    "quota_command": ["SSH#isi quota quotas view {folder_name} directory"],
    "quota_regexp": "Hard Threshold: (?P<hard_number>[0-9.]+)(?P<hard_unit>[KMGTP])",
    "delete_acl_command": ["SSH#echo chmod -a# {{index}} {{folder_name}}"],
    "edit_acl_command": ["SSH#echo chmod \\=a# {{index}} group my_users{{folder_name | replace('/ifs/admin/','') | replace('/','_')}}_{{permission}} allow {{mapped_permission}} {{folder_name}}"],
    "add_acl_command": ["SSH#echo chmod +a# {{index}} group my_users{{folder_name | replace('/ifs/admin/','') | replace('/','_')}}_{{permission}} allow {{mapped_permission}} {{folder_name}}"],
    "protocol_command": ["SSH#(isi smb shares list | grep \"{{folder_name}}\")" && echo \"smb,\"",
                         "SSH#(isi nfs exports list | grep \"{{folder_name}}\") && echo \"nfs,\""],
    "protocol_regexp": "\\b(nfs|smb|s3),",
    "mapped_permission": {
      "rwx": "dir_gen_all,object_inherit,container_inherit",
      "rx": "dir_gen_read,dir_gen_execute,object_inherit,container_inherit",
      "r": "dir_gen_read,object_inherit,container_inherit"
    },
    "acl_regexp": {
      "regex_patterns": {
        "owner": "OWNER: user:(?P<owner>[A-Za-z0-9\\\\\\-\\_]+)",
        "group": "GROUP: group:(?P<group>[A-Za-z0-9\\\\\\-\\_]+)",
        "everyone": "(?P<everyone>Domain Users)",
        "posix": "^(?P<type>.)(?P<owner>[rwx\\-]{3})(?P<group>[rwx\\-]{3})(?P<everyone>[rwx\\-]{3})",
        "acl": "(?P<index>\\d+): (?P<type>user|group|everyone)(:)*(?P<name>[A-Za-z0-9\\\\\\-\\_]*) (?P<access>allow|deny) (?P<permission>[a-z\\_,]*)"
      },
      "permission_map": {
        "std_delete": "w",
        "std_read_dac": "r",
        "std_write_dac": "rwx",
        "std_write_owner": "rwx",
        "std_synchronize": "r",
        "std_required": "rwx",
        "generic_all": "rwx",
        "generic_read": "r",
        "generic_write": "w",
        "generic_exec": "x",
        "dir_gen_all": "rwx",
        "dir_gen_read": "r",
        "dir_gen_write": "wx",
        "dir_gen_execute": "x",
        "file_gen_all": "rwx",
        "file_gen_read": "r",
        "file_gen_write": "wx",
        "file_gen_execute": "x",
        "modify": "w",
        "file_read": "r",
        "file_write": "w",
        "append": "w",
        "execute": "x",
        "file_read_attr": "r",
        "file_write_attr": "wx",
        "file_read_ext_attr": "r",
        "file_write_ext_attr": "wx",
        "delete_child": "w",
        "list": "r",
        "add_file": "w",
        "add_subdir": "w",
        "traverse": "rx",
        "dir_read_attr": "r",
        "dir_write_attr": "rwx",
        "dir_read_ext_attr": "r",
        "dir_write_ext_attr": "rwx",
        "object_inherit": "",
        "container_inherit": "",
        "inherit_only": "",
        "no_prop_inherit": "",
        "inherited_ace": ""
      }
    },
  "example-web": {
    "title": "example",
    "web_host": "https://example.example.com:8080",
    "web_username": "admin",
    "web_password": "admin",
    "ignore_groups": ["my_admin_group"],
    "acl_ldap_attribute": "samAccountName",
    "acl_command": ["WEB#GET#http://my.example.com:8080/cli/acl?path={{folder_name}}"],
    "quota_command": ["WEB#GET#http://my.example.com:8080/cli/quotas?path={{folder_name}}"],
    "quota_regexp": "Hard Threshold: (?P<quota>[0-9.]+)(?P<unit>[KMGTP])",
    "delete_acl_command": ["WEB#PUT#"],
    "protocol_command": ["WEB#GET#"],
    "protocol_regexp": "\\b(nfs|smb|s3),",
    "acl_regexp": {
      "regex_patterns": {
        "owner": "OWNER: user:(?P<owner>[A-Za-z0-9\\\\\\-\\_]+)",
        "group": "GROUP: group:(?P<group>[A-Za-z0-9\\\\\\-\\_]+)",
        "everyone": "(?P<everyone>Domain Users)",
        "posix": "^(?P<type>.)(?P<owner>[rwx\\-]{3})(?P<group>[rwx\\-]{3})(?P<everyone>[rwx\\-]{3})",
        "acl": "(?P<index>\\d+): (?P<type>user|group|everyone)(:)*(?P<name>[A-Za-z0-9\\\\\\-\\_]*) (?P<access>allow|deny) (?P<permission>[a-z\\_,]*)"
      },
      "permission_map": {
        "std_delete": "w",
        "std_read_dac": "r",
        "std_write_dac": "r,w,x",
        "std_write_owner": "r,w,x",
        "std_synchronize": "r",
        "std_required": "r,w,x",
        "generic_all": "r,w,x",
        "generic_read": "r",
        "generic_write": "w",
        "generic_exec": "x",
        "dir_gen_all": "r,w,x",
        "dir_gen_read": "r",
        "dir_gen_write": "w,x",
        "dir_gen_execute": "x",
        "file_gen_all": "r,w,x",
        "file_gen_read": "r",
        "file_gen_write": "w,x",
        "file_gen_execute": "x",
        "modify": "w",
        "file_read": "r",
        "file_write": "w",
        "append": "w",
        "execute": "x",
        "file_read_attr": "r",
        "file_write_attr": "w,x",
        "file_read_ext_attr": "r",
        "file_write_ext_attr": "w,x",
        "delete_child": "w",
        "list": "r",
        "add_file": "w",
        "add_subdir": "w",
        "traverse": "r,x",
        "dir_read_attr": "r",
        "dir_write_attr": "r,w,x",
        "dir_read_ext_attr": "r",
        "dir_write_ext_attr": "r,w,x",
        "object_inherit": "",
        "container_inherit": "",
        "inherit_only": "",
        "no_prop_inherit": "",
        "inherited_ace": ""
      }
    }
  }
}

  },